use v6;
#  -- DO NOT EDIT --
# generated by: ../LibXML-p6/etc/generator.p6 --mod=LibXSLT --lib=XSLT etc/libxslt-api.xml

unit module LibXSLT::Native::Gen::functions;
# interface for the XSLT functions not from XPath:
#    a set of extra functions coming from XSLT but not in XPath 
use LibXML::Native::Defs :xmlCharP;
use LibXSLT::Native::Defs :$lib;

our sub xsltDocumentFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltElementAvailableFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltFormatNumberFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltFunctionAvailableFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltGenerateIdFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltKeyFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltRegisterAllFunctions(xmlXPathContext $ctxt) is native(XSLT) is export {*}
our sub xsltSystemPropertyFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltUnparsedEntityURIFunction(xmlXPathParserContext $ctxt, int32 $nargs) is native(XSLT) is export {*}
our sub xsltXPathFunctionLookup(Pointer $vctxt, xmlCharP $name, xmlCharP $ns_uri --> xmlXPathFunction) is native(XSLT) is export {*}
