use v6;
#  -- DO NOT EDIT --
# generated by: ../LibXML-p6/etc/generator.p6 --mod=LibXSLT --lib=XSLT etc/libxslt-api.xml

unit module LibXSLT::Native::Gen::extensions;
# interface for the extension support:
#    This provide the API needed for simple and module extension support. 
use LibXML::Native::Defs :xmlCharP;
use LibXSLT::Native::Defs :$lib;

our sub xsltDebugDumpExtensions(FILE * $output) is native(XSLT) is export {*}
our sub xsltExtModuleElementLookup(xmlCharP $name, xmlCharP $URI --> xsltTransformFunction) is native(XSLT) is export {*}
our sub xsltExtModuleElementPreComputeLookup(xmlCharP $name, xmlCharP $URI --> xsltPreComputeFunction) is native(XSLT) is export {*}
our sub xsltExtModuleFunctionLookup(xmlCharP $name, xmlCharP $URI --> xmlXPathFunction) is native(XSLT) is export {*}
our sub xsltExtModuleTopLevelLookup(xmlCharP $name, xmlCharP $URI --> xsltTopLevelFunction) is native(XSLT) is export {*}
our sub xsltInitGlobals() is native(XSLT) is export {*}
our sub xsltRegisterExtModule(xmlCharP $URI, xsltExtInitFunction $initFunc, xsltExtShutdownFunction $shutdownFunc --> int32) is native(XSLT) is export {*}
our sub xsltRegisterExtModuleElement(xmlCharP $name, xmlCharP $URI, xsltPreComputeFunction $precomp, xsltTransformFunction $transform --> int32) is native(XSLT) is export {*}
our sub xsltRegisterExtModuleFull(xmlCharP $URI, xsltExtInitFunction $initFunc, xsltExtShutdownFunction $shutdownFunc, xsltStyleExtInitFunction $styleInitFunc, xsltStyleExtShutdownFunction $styleShutdownFunc --> int32) is native(XSLT) is export {*}
our sub xsltRegisterExtModuleFunction(xmlCharP $name, xmlCharP $URI, xmlXPathFunction $function --> int32) is native(XSLT) is export {*}
our sub xsltRegisterExtModuleTopLevel(xmlCharP $name, xmlCharP $URI, xsltTopLevelFunction $function --> int32) is native(XSLT) is export {*}
our sub xsltRegisterTestModule() is native(XSLT) is export {*}
our sub xsltUnregisterExtModule(xmlCharP $URI --> int32) is native(XSLT) is export {*}
our sub xsltUnregisterExtModuleElement(xmlCharP $name, xmlCharP $URI --> int32) is native(XSLT) is export {*}
our sub xsltUnregisterExtModuleFunction(xmlCharP $name, xmlCharP $URI --> int32) is native(XSLT) is export {*}
our sub xsltUnregisterExtModuleTopLevel(xmlCharP $name, xmlCharP $URI --> int32) is native(XSLT) is export {*}
